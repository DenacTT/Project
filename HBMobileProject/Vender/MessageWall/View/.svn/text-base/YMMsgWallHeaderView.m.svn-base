//
//  YMMsgWallHeaderView.m
//  scale
//
//  Created by KiraSu on 15/8/12.
//  Copyright (c) 2015年 KiraSu. All rights reserved.
//

#import "YMMsgWallHeaderView.h"
#import "WallScoreView.h"
#import "WallWeightView.h"
#import "ComPonentModelControl.h"
#import "YMUtil.h"
#import "YMNavigationViewManager.h"
#import "MsgWallDef.h"
#import "WallHeaderTipsView.h"

@interface YMMsgWallHeaderView ()

{
    WallScoreView *         _wallScoreView;
    WallWeightView *        _wallWeightView;
    
    CGRect              _defaultBgRect;
    WallHeaderTipsView *_wallTipsView;
}
@property (nonatomic,strong) UIView *AnimatView;
@end

@implementation YMMsgWallHeaderView

 - (id) initWithFrame:(CGRect)frame
{
    self = [super initWithFrame:frame];
    if (self)
    {
        [self initViewsWithFrame:frame];
        
        [self reloadHeadData];
        
    }
    return self;
}

- (void)reloadHeadData
{
    ComPonentModelControl *comModelCol = [[ComPonentModelControl alloc]init];
    
    self.scoreModel = [[comModelCol getMyScoreAndWeightDatasWithUserId:[XMUserDefault currentUserId]] objectForKey:@"Score"];
}

 - (void) setScoreModel:(ScoreModel *)scoreModel
{
    if (_scoreModel != scoreModel)
    {
        _scoreModel = scoreModel;
    }
    
    
    NSInteger mark = [_scoreModel.score integerValue];
//    mark = 78; //测试    [XMTools getCurrentLanguage] == LangKorean
    if (mark >0 && mark <= 100 && [XMTools getCurrentLanguage] != LangEN) //有分数加载有分数的页面ui  韩文版 非英文
    {
        [_wallScoreView setHidden:NO];
        [_wallWeightView setHidden:YES];
        
        _wallScoreView.scoreModel = self.scoreModel;
        
    }else//无分数 加载只有体重的ui
    {
        
        [_wallScoreView setHidden:YES];
        [_wallScoreView setHidden:NO];
        
        _wallWeightView.scoreModel = self.scoreModel;
    }
}
- (void) initViewsWithFrame:(CGRect)frame
{
    //信息壁头部
    self.backgroundColor = [UIColor homeHeadViewBgColor];
    
    
    _defaultBgRect = CGRectMake(0, 0, frame.size.width, frame.size.height);
    _bg = [[UIView alloc] initWithFrame: _defaultBgRect];
    _bg.backgroundColor = RGBA(50, 147, 230, 1.0f);
    
    [self addSubview: _bg];
    
    _AnimatView = [[UIView alloc]initWithFrame:CGRectMake(0, 0, frame.size.width, frame.size.height)];
    
    _wallScoreView = [[WallScoreView alloc]initWithFrame:_AnimatView.frame];
    [_wallScoreView setDisableCounting: YES];
    _wallWeightView = [[WallWeightView alloc]initWithFrame:_AnimatView.frame];
    [_wallWeightView setDisableCounting: YES];
    _wallTipsView = [[WallHeaderTipsView alloc] initWithFrame:CGRectMake(0, _AnimatView.height - 30, UI_SCREEN_WIDTH, 30)];
    
    
    [_AnimatView addSubview:_wallScoreView]; //分数
    
    [_AnimatView addSubview:_wallWeightView];
    
    //未成年提示
//    [self addSubview:_wallTipsView];
    
    [_bg addSubview:_AnimatView];
    
    
    //添加放大动画
//    CGAffineTransform trans = CGAffineTransformMakeScale(0.1, 0.1);
//    _AnimatView.transform = trans;
//    [UIView beginAnimations:nil context:nil];
//    [UIView setAnimationDuration:1.5];
//    _AnimatView.transform = CGAffineTransformMakeScale(1, 1);
//    [UIView commitAnimations];
    
}

#pragma mark - Action
- (void) headViewAnimateWithOffectY:(CGFloat) y
{
    //NSLog(@"高度：%f",y);
//    CALayer *layer = self.AnimatView.layer;
//    
//    if (y > self.height || y<0)
//    {
//        
//        [UIView animateWithDuration:0.1 animations:^{
//            self.AnimatView.alpha = 1;
//        }];
//        
//        CGAffineTransform cg = CGAffineTransformMakeTranslation(0, 0);
//        //NSLog(@"gogg:%f",cg.ty);
//        CATransform3D rotationAndPerspectiveTransform = CATransform3DMakeAffineTransform(cg);
//        
//        rotationAndPerspectiveTransform.m34 = 0.001;
//        rotationAndPerspectiveTransform = CATransform3DRotate(rotationAndPerspectiveTransform, M_PI/180*(160*(0)/self.height), 1.0f, 0.0f, 0.0f);
//        layer.transform = rotationAndPerspectiveTransform;
//        
//        self.AnimatView.alpha = 1 - y/104;
//        
//        return;
//    }
//    
//    CGAffineTransform cg = CGAffineTransformMakeTranslation(0, y/2);
//    //NSLog(@"gogg:%f",cg.ty);
//    CATransform3D rotationAndPerspectiveTransform = CATransform3DMakeAffineTransform(cg);
//    
//    rotationAndPerspectiveTransform.m34 = 0.004;
//    rotationAndPerspectiveTransform = CATransform3DRotate(rotationAndPerspectiveTransform, M_PI/180*(160*(-y)/self.height), 1.0f, 0.0f, 0.0f);
//    layer.transform = rotationAndPerspectiveTransform;
//    
//    self.AnimatView.alpha = 1 - y/104;
    if (y < 15) {
        _wallTipsView.alpha = 1 - y/15;
    }else{
        _wallTipsView.alpha = 0;
    }
    
    CALayer *layer = self.AnimatView.layer;
    
    if (y > self.height || y<0)
    {
        
        [UIView animateWithDuration:0.1 animations:^{
            self.AnimatView.alpha = 1;
        }];
        
        CGAffineTransform cg = CGAffineTransformMakeTranslation(0, 0);
        //NSLog(@"gogg:%f",cg.ty);
        CATransform3D rotationAndPerspectiveTransform = CATransform3DMakeAffineTransform(cg);
        
        rotationAndPerspectiveTransform.m34 = 0.001;
        rotationAndPerspectiveTransform = CATransform3DRotate(rotationAndPerspectiveTransform, 0.f, 1.0f, 0.0f, 0.0f);
        layer.transform = rotationAndPerspectiveTransform;
        
        self.AnimatView.alpha = 1 - y/self.height;
        
        return;
    }else if (y>0.1f){
    
    CGAffineTransform cg = CGAffineTransformMakeTranslation(0, y/2);
    //NSLog(@"gogg:%f",cg.ty);
    CATransform3D rotationAndPerspectiveTransform = CATransform3DMakeAffineTransform(cg);
    
    rotationAndPerspectiveTransform.m34 = 0.004;
    rotationAndPerspectiveTransform = CATransform3DRotate(rotationAndPerspectiveTransform, M_PI/180*(-y), 1.0f, 0.0f, 0.0f);
    layer.transform = rotationAndPerspectiveTransform;
    
    self.AnimatView.alpha = 1 - y/self.height;
    }
}

- (void)handleScrollView: (CGPoint)offset
{
    if (offset.y < 0.1)
    {
        CGFloat delta = 0.0f;
        CGRect rect = _defaultBgRect;
        delta = fabs(MIN(0.0f, offset.y));
        rect.origin.y -= delta;
        rect.size.height += delta;
        _bg.frame = rect;
        self.clipsToBounds = NO;
    }
    else
    {
        CGRect rect = _defaultBgRect;
        _bg.frame = rect;
        self.clipsToBounds = YES;
    }
}

@end
