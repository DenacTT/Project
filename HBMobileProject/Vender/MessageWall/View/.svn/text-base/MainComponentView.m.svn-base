//
//  MainComponentView.m
//  scale
//
//  Created by solf on 16/4/25.
//  Copyright © 2016年 solf. All rights reserved.
//

#import "MainComponentView.h"
#import "YMTopbar.h"
#import "ComTopBarTools.h"
#import "ComDetailsView.h"
#import "YMNavigationViewManager.h"
#import "ComponentAdapter.h"
#import "WallNavView.h"

@interface MainComponentView ()<UIScrollViewDelegate,wallMessageNavDelegate>

@property (nonatomic,strong) ComTopBarTools *topBarTool; //头部类型条

@property (nonatomic,strong) ComponentAdapter *dataAdapter;

@property (nonatomic,strong) WallNavView *topBar;

@property (nonatomic,strong) UIScrollView *comScrollView;

@property (nonatomic,strong) NSMutableArray *comViewArr;

@property (nonatomic) NSInteger currentIndex;

@end

@implementation MainComponentView

- (id)initWithFrame:(CGRect)frame
{
    self = [super initWithFrame:frame];
    if (self) {
        self.dataAdapter = [[ComponentAdapter alloc] init];
        [self initViews];
    }
    return self;
}

- (void)initViews
{
    self.backgroundColor = [UIColor whiteColor];

    _topBar = [[WallNavView alloc]initWithFrame:CGRectMake(0, 0, ScreenWidth, 64)];
    _topBar.wallNavDelegate = self;
    [_topBar setNavWithTitle:NSLocalizedString(@"lb_str_componentNtroduced", @"成分介绍") closeEnable:NO backEnable:YES];
    [self addSubview:_topBar];
    
    __weak typeof(self) weakSelf = self;
    
    _topBarTool = [[ComTopBarTools alloc] initWithFrame:CGRectMake(0, _topBar.bottom, ScreenWidth, 44.f) items:self.dataAdapter.itemTitle selectedIndex:0 select:^(NSInteger item) {
        NSLog(@"选中%zi",item);
        
        [weakSelf scrollToIndex:item];
    }];
    
    _comScrollView = [[UIScrollView alloc] initWithFrame:CGRectMake(0, _topBarTool.bottom, ScreenWidth, ScreenHeight - _topBarTool.height - _topBar.height)];
    _comScrollView.delegate = self;
    _comScrollView.scrollsToTop = NO;
    _comScrollView.alwaysBounceHorizontal = YES;
    _comScrollView.pagingEnabled = YES;
    _comScrollView.showsHorizontalScrollIndicator = NO;
    _comScrollView.backgroundColor = [UIColor colorWithHexString:@"#f3f3f7"];
    [_comScrollView setContentSize:CGSizeMake(ScreenWidth * [self.dataAdapter.itemTitle count], _comScrollView.height)];
    
    [self addSubview:_topBar];
    [self addSubview:_topBarTool];
    [self addSubview:_comScrollView];
}

- (void)initDatas
{
    NSInteger count = [self.dataAdapter itemCount];
    
    if (!_comViewArr) {
        _comViewArr = [NSMutableArray array];
    }else
    {
        [_comViewArr removeAllObjects];
        for (UIView *view in _comScrollView.subviews)
        {
            [view removeFromSuperview];
        }
    }
    
    for (int i = 0; i < count; i++)
    {
        ComDetailsView *detailsComView = [[ComDetailsView alloc] initWithFrame:CGRectMake(ScreenWidth * i, 0, ScreenWidth, _comScrollView.height)];
        //        detailsComView.backgroundColor = RGB(128, 128, i*20);
        detailsComView.tag = i;
        [detailsComView layoutViewWithComModel:[self.dataAdapter getComDataWithIndex:i]];
        [_comScrollView addSubview:detailsComView];
        [_comViewArr addObject:detailsComView];
    }
    
    [self scrollToIndex:_currentIndex];
    [_topBarTool scrollToIndex:_currentIndex];
}

- (void) setScrollTo:(NSInteger)index
{
    _currentIndex = index;
}

- (void)scrollToIndex:(NSInteger)index
{
    if (index < [self.dataAdapter itemCount])
    {
        [_comScrollView setContentOffset:CGPointMake(index * ScreenWidth, _comScrollView.contentOffset.y) animated:YES];
        
        if (index <[_comViewArr count])
        {
            [(ComDetailsView *)[_comViewArr objectAtIndex:index] locationCursor];
        }
        
    }
}

#pragma mark - UIScrollViewDelegate

//根据目标offect 决定tool位置
- (void)scrollViewWillEndDragging:(UIScrollView *)scrollView withVelocity:(CGPoint)velocity targetContentOffset:(inout CGPoint *)targetContentOffset
{
    NSInteger index = targetContentOffset->x / ScreenWidth;
    
    [_topBarTool scrollToIndex:index];
}

- (void) wallNavCloseAction
{
    
}

- (void) wallNavBackAction
{
//    [[YMNavigationViewManager single] pop];
    RootNavigationPopController();
    
}

#pragma mark - NavigateViewDelegate

- (void)setOnChangeViewMode: (void(^)(id))cb
{
    
}
- (void)resize: (CGSize)rect
{
    
}
- (void)loadView
{
    
}
- (void)viewWillAppear
{
    [self initDatas];
}
- (void)viewDidAppear
{
    
}
- (void)viewWillDisappear
{
    
}
- (void)viewDidDisappear
{
    
}

@end
