//
//  ComTopBarTools.m
//  scale
//
//  Created by solf on 16/5/9.
//  Copyright © 2016年 solf. All rights reserved.
//

#import "ComTopBarTools.h"
#import "UIColor+YYAdd.h"
#import "UIView+LayoutMethods.h"

@interface ComTopBarTools ()<UIScrollViewDelegate>
{
    NSArray *       _items;
    UIScrollView *  _barScroll;
    NSInteger       _selectedIndex;
    UIButton *        _lastBtn;
    
    UILabel *       _scrollLine;
    
    CGFloat         _itemWidth;
}

@property (nonatomic,strong) NSMutableArray *btnList;

@end
@implementation ComTopBarTools

- (id)initWithFrame:(CGRect)frame items:(NSArray*)items selectedIndex:(NSInteger)selectedIndex select:(selectItem)block
{
    self = [super initWithFrame:frame];
    if (self) {
        if (items && [items isKindOfClass:[NSArray class]])
        {
            _items = [NSArray arrayWithArray:items];
        }else
        {
            _items = [NSArray array];
        }
        _selectedIndex = selectedIndex;
        
        [self initViews];
        
        
        if (block)
        {
            self.selectBlock = block;
        }
    }
    return self;
}

- (void)initViews
{
    _barScroll = [[UIScrollView alloc] initWithFrame:CGRectMake(0, 0, self.width, self.height)];
    _barScroll.delegate = self;
    _barScroll.scrollsToTop = NO;
    _barScroll.alwaysBounceHorizontal = YES;
    _barScroll.showsHorizontalScrollIndicator = NO;
    
    _itemWidth = ScreenWidth/4.f;
    
    if ([_items count] >0)
    {
        _barScroll.contentSize = CGSizeMake([_items count] * _itemWidth, _barScroll.height);
        for (int i = 0; i<[_items count]; i++)
        {
            UIButton *itemBtn = [[UIButton alloc] initWithFrame:CGRectMake(i * _itemWidth, 0, _itemWidth , self.height)];
            itemBtn.titleLabel.font = [UIFont systemFontOfSize:14.f];
            [itemBtn setTitleColor:[UIColor colorWithHexString:@"#888888"] forState:UIControlStateNormal];
            [itemBtn setTitle:[_items objectAtIndex:i] forState:UIControlStateNormal];
            itemBtn.tag = i;
            
            [itemBtn addTarget:self action:@selector(selectedItem:) forControlEvents:UIControlEventTouchUpInside];
            
            [_barScroll addSubview:itemBtn];
            
            if (i == 0)
            {
                [self selectedItem:itemBtn];
            }
            
            [self.btnList addObject:itemBtn];
        }
    }
    _scrollLine = [[UILabel alloc] initWithFrame:CGRectMake(0, _barScroll.height-2, _itemWidth, 2)];
    _scrollLine.backgroundColor = [UIColor colorWithHexString:@"#41D0CB"];
    
    [_barScroll addSubview:_scrollLine];
    [self addSubview:_barScroll];
 
    [self scrollToIndex:_selectedIndex];
}

- (void)scrollToIndex:(NSInteger)index
{
    _selectedIndex = index;
    
    if (index < [self.btnList count])
    {
        [self selectedItem:[self.btnList objectAtIndex:index]];
        
//        CGRect rect = CGRectInset(((UIButton *)[self.btnList objectAtIndex:index]).frame,0, 0);
//        [_barScroll scrollRectToVisible:rect animated:YES];
        
        if (index < [self.btnList count] - 3)
        {
            [_barScroll setContentOffset:CGPointMake(index * _itemWidth, _barScroll.contentOffset.y) animated:YES];
            
        }else{
        
            [_barScroll setContentOffset:CGPointMake((index - 3) * _itemWidth, _barScroll.contentOffset.y) animated:YES];
        }
    }
}

- (void)selectedItem:(UIButton *)btn
{
//    if (nil == _lastBtn)
//    {
//        _lastBtn = btn;
//    }else
        if (btn == _lastBtn) //重复选中
    {
        return;
    }
    
    if (btn.tag < [_items count])
    {
        [btn setTitleColor:[UIColor colorWithHexString:@"#41D0CB"] forState:UIControlStateNormal];
        if (_lastBtn)
        {
            [_lastBtn setTitleColor:[UIColor colorWithHexString:@"#888888"] forState:UIControlStateNormal];
        }
        _lastBtn = btn;
        
        [self scrollLineAnimateToBtn:btn];
    }
    
    if (self.selectBlock)
    {
        self.selectBlock(btn.tag);
    }
}

-(void) scrollLineAnimateToBtn:(id)btn
{
    [UIView animateWithDuration:0.4
                          delay:0
         usingSpringWithDamping:0.5
          initialSpringVelocity:0
                        options:UIViewAnimationOptionCurveLinear
                     animations:^{
                         
                         [_scrollLine centerXEqualToView:btn];
                     }
                     completion:nil];
}

#pragma mark - UIScrollViewDelegate

- (void)scrollViewWillEndDragging:(UIScrollView *)scrollView withVelocity:(CGPoint)velocity targetContentOffset:(inout CGPoint *)targetContentOffset
{
//    CGFloat flagWidth = targetContentOffset->x;
//    
//    NSInteger index = round(flagWidth / _itemWidth);
//    [self scrollToIndex:index];
}

#pragma mark - 懒加载

- (NSMutableArray *)btnList
{
    if (!_btnList)
    {
        _btnList = [NSMutableArray array];
    }
    return _btnList;
}

@end
